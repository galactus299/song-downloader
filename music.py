import mudopy
import base64
import tkinter as tk 
from tkinter import PhotoImage


def download(song,artist):
    
    if artist!="":
        mudopy.set_path("C:\Program Files (x86)\chromedriver_win32\chromedriver.exe")
        mudopy.download(song,artist,None)
    else:
        mudopy.set_path(".\chromedriver.exe")
        mudopy.download(song,None,None)
    

        




root=tk.Tk()
root.configure(bg='#0c1620')
root.resizable(False, False)

str1=b''
#photo= PhotoImage(file="logo.png")
photo=PhotoImage(data=str1)
buttonExample5 = tk.Label(root, bg='#0c1620', bd=0, text="asdfasdf", image=photo)
buttonExample5.place(x=280, y=110)
song = tk.Entry(root)
song = tk.Entry(root, justify='center', width=34, font=200,  bg='#000000', insertbackground='white', bd=0, fg='#01ada0')
song.place(x=215, y=252)

artist = tk.Entry(root)
artist = tk.Entry(root, justify='center', width=34, font=200,  bg='#000000', insertbackground='white',
                         bd=0, fg='#01ada0')
artist.place(x=215, y=325)
labelExample1 = tk.Label(root, text="Artist name (optional)", bg='#0c1620', width=20, fg='#0e5152')
labelExample1.place(x=226, y=355)

labelExample2 = tk.Label(root, text="song", bg='#0c1620', width=15, fg='#0e5152')
labelExample2.place(x=207, y=280)

button=tk.Button(root)
button_wer = tk.Button(root, bg='#0c1620', fg='#0e5152', text="$ownload", command= lambda:download(song.get(),artist.get()))
button_wer.place(x=248, y=415)



root.geometry("738x470")
root.title("so^g")
root.wm_iconphoto(True, photo)

root.mainloop()